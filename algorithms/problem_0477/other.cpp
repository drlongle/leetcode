/*
We go through each bit position, and then count the number of 1s. The total hamming distance generated by this bit position is simply the number of 0s multiplied by the number of 1s, since each 0,1 pair generates a distance of 1. We do this for every bit position to get total distance. Runtime is O(N).
*/

class Solution {
public:
    int totalHammingDistance(vector<int>& nums) {
        int count = 0, mask = 1;
        size_t size = nums.size();
        for(int i = 1; i < 32; ++i) {
            int ones = 0;
            for(const int v: nums) if(v&mask) ++ones;
            count += (size-ones)*ones;
            mask = 1<<i;
        }
        return count;
    }
};
